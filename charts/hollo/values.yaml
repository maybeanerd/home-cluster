---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.5.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: kubernetes.io/role
                operator: In
                values:
                  - worker

controllers:
  main:
    strategy: Recreate

    containers:
      main:
        image:
          repository: ghcr.io/dahlia/hollo
          tag: 0.1.0
          pullPolicy: IfNotPresent

        # TODO
        env:
          - name: DATABASE_URL
            value: "postgres://user:password@postgres:5432/database"
          - name: SECRET_KEY
            value: "${SECRET_KEY}"
          - name: LOG_LEVEL
            value: "${LOG_LEVEL}"
          - name: BEHIND_PROXY
            value: "${BEHIND_PROXY}"
          - name: S3_REGION
            value: us-east-1
          - name: S3_BUCKET
            value: hollo
          - name: S3_URL_BASE
            value: http://localhost:9000/hollo/
          - name: S3_ENDPOINT_URL
            value: http://minio:9000
          - name: S3_FORCE_PATH_STYLE
            value: "true"
          - name: AWS_ACCESS_KEY_ID
            value: minioadmin
          - name: AWS_SECRET_ACCESS_KEY
            value: minioadmin
        resources:
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi

      minio:
        image:
          repository: minio/minio
          tag: RELEASE.2024-10-13T13-34-11Z
          pullPolicy: IfNotPresent
        env:
          - name: MINIO_ROOT_USER
            value: minioadmin
          - name: MINIO_ROOT_PASSWORD
            value: minioadmin
        command: ["server", "/data", "--console-address", ":9001"]

        resources:
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
service:
  main:
    controller: main
    ports:
      http:
        port: 3000
  minio:
    controller: minio
    ports:
      http:
        port: 9000

persistence:
  minio:
    enabled: true
    type: persistentVolumeClaim
    storageClass: "nfs-client"
    accessMode: ReadWriteOnce
    size: 100Gi
    advancedMounts:
      main:
        minio:
          - path: /data

ingress:
  main:
    hosts:
      - host: hollo.cluster.diluz.io
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http

postgresql:
  enabled: true
  auth:
    # TODO override in consumer (e.g. in argoCD directly)
    password: "ThisIsNotASecurePassword"
  primary:
    persistence:
      enabled: true
      storageClass: nfs-client
      accessMode: ReadWriteOnce
      size: 20Gi
    startupProbe:
      enabled: true
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/role
                  operator: In
                  values:
                    - worker
