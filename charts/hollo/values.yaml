---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.5.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: kubernetes.io/role
                operator: In
                values:
                  - worker

controllers:
  main:
    strategy: Recreate

    containers:
      main:
        image:
          repository: ghcr.io/dahlia/hollo
          tag: 0.1.0
          pullPolicy: IfNotPresent

        # TODO
        env:
          DATABASE_URL: "postgres://hollo:ThisIsNotASecurePassword@hollo-postgresql:5432/hollo"
          SECRET_KEY: CREATE_YOUR_SECRET_KEY
          LOG_LEVEL: info
          BEHIND_PROXY: true
          # S3_REGION: us-east-1 # unused
          S3_BUCKET: hollo
          S3_URL_BASE: https://hollo-cdn.cluster.diluz.io/hollo/
          S3_ENDPOINT_URL: http://hollo-minio:9000
          S3_FORCE_PATH_STYLE: true
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_SECRET_ACCESS_KEY: ThisIsNotASecurePassword
        resources:
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  minio:
    strategy: Recreate

    containers:
      main:
        image:
          repository: minio/minio
          tag: RELEASE.2024-10-13T13-34-11Z
          pullPolicy: IfNotPresent
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: ThisIsNotASecurePassword
        command:
          - /bin/bash
          - -c
        args:
          - minio server /data --console-address :9090

        resources:
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
service:
  main:
    controller: main
    ports:
      http:
        port: 3000
  minio:
    controller: minio
    ports:
      http:
        port: 9000
      webui:
        port: 9090

persistence:
  minio:
    enabled: true
    type: persistentVolumeClaim
    storageClass: "nfs-client"
    accessMode: ReadWriteOnce
    size: 100Gi
    advancedMounts:
      minio:
        main:
          - path: /data

ingress:
  main:
    hosts:
      - host: hollo.cluster.diluz.io
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http
  minio:
    hosts:
      - host: hollo-minio.cluster.diluz.io
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: minio
              port: webui
      - host: hollo-cdn.cluster.diluz.io
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: minio
              port: http

postgresql:
  enabled: true
  auth:
    username: "hollo"
    # TODO override in consumer (e.g. in argoCD directly)
    password: "ThisIsNotASecurePassword"
    database: "hollo"
  primary:
    persistence:
      enabled: true
      storageClass: nfs-client
      accessMode: ReadWriteOnce
      size: 20Gi
    startupProbe:
      enabled: true
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/role
                  operator: In
                  values:
                    - worker
