# Scope values to the immich dependency
immich:
  ## This chart relies on the common library chart from bjw-s
  ## You can find it at https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
  ## Refer there for more detail about the supported values

  image:
    repository: ghcr.io/immich-app/immich-server
    tag: v1.88.2

  # Immich persistence
  immich:
    persistence:
      # Main data store for all photos shared between different components.
      library:
        existingClaim: immich-library  # Which is exactly what we specify below and create with library-pvc.yaml
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Ti
        storageClass: nfs-client

  # Immich components
  server:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent
    ingress:
      main:
        enabled: true
        annotations:
          # proxy-body-size is set to 0 to remove the body limit on file uploads
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          kubernetes.io/ingress.class: traefik
          kubernetes.io/tls-acme: "true"
        hosts:
          - host: immich.cluster.diluz.io
            paths:
              - path: /
                pathType: Prefix

  microservices:
    enabled: true
    env:
      REVERSE_GEOCODING_DUMP_DIRECTORY: /geodata-cache
    persistence:
      geodata-cache:
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: nfs-client
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent

  machine-learning:
    enabled: false
    image:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
    env:
      TRANSFORMERS_CACHE: /cache
    persistence:
      cache:
        enabled: true
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: nfs-client

# -----------------------------------------------------------------------------------------------

  # Immich Dependencies
  postgresql:
    enabled: true
    global:
      postgresql:
        auth:
          username: immich
          database: immich
          password: immich
    primary:
      persistence:
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: nfs-client

  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: false

  typesense:
    enabled: true
    env:
      TYPESENSE_DATA_DIR: /tsdata
      TYPESENSE_API_KEY: typesense
    persistence:
      tsdata:
        # Enabling typesense persistence is recommended to avoid slow reindexing
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: nfs-client
    image:
      repository: docker.io/typesense/typesense
      tag: 0.25.1
      pullPolicy: IfNotPresent
