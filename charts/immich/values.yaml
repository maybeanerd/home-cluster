## This chart relies on the common library chart from bjw-s
## You can find it at https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
## Refer there for more detail about the supported values

# These entries are shared between all the Immich components

env:
  REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
  DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
  DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
  # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
  DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
  IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'

image:
  repository: ghcr.io/immich-app/immich-server
  tag: v1.91.2

immich:
  persistence:
    # Main data store for all photos shared between different components.
    library:
      existingClaim: immich-library  # Which is exactly what we specify below and create with library-pvc.yaml
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Ti
      storageClass: nfs-client

# Dependencies
postgresql:
  enabled: true
  image:
    repository: tensorchord/pgvecto-rs
    tag: pg16-v0.1.11
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        password: immich
        postgresPassword: immich
  primary:
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

# Immich components

server:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent
  ingress:
    main:
      enabled: true
      annotations:
        # proxy-body-size is set to 0 to remove the body limit on file uploads
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        kubernetes.io/ingress.class: traefik
        kubernetes.io/tls-acme: "true"
      hosts:
        - host: immich.cluster.diluz.io
          paths:
            - path: /
              pathType: Prefix

microservices:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent

machine-learning:
  enabled: false
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: IfNotPresent
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: true
      accessMode: ReadWriteOnce
      size: 10Gi
      storageClass: nfs-client
