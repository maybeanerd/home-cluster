{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

## TL;DR

```console
$ helm repo add utkuozdemir https://utkuozdemir.org/helm-charts
$ helm install my-release utkuozdemir/{{ template "chart.name" . }}
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

Alternatively, a YAML file that specifies the values for the parameters
can be provided while installing the chart. For example,

```console
$ helm install my-release -f values.yaml utkuozdemir/plex
```

> **Tip**: You can use the default [values.yaml](values.yaml)


## Notes

Note that this is an un-opinionated chart regarding the configuration. What is meant by this is:
The chart passes the set of environment variables as-is into the container, using the `env` and `secretEnv` values.
This way we avoid mapping each and every configuration parameter to an explicitly
named chart parameter and provides a very flexible configuration.

## Upgrading Chart

```console
helm upgrade my-release utkuozdemir/{{ template "chart.name" . }}
```

_See [helm upgrade](https://helm.sh/docs/helm/helm_upgrade/) for command documentation._

### Upgrading an existing Release to a new major version

A major chart version change (like 1.2.0 -> 2.0.0) indicates that
there is an incompatible breaking change needing manual actions.

### From 1.x to 2.x

On version 2.x, the app is backed by a deployment instead of a statefulset.

The values is largely refactored - pay attention to the changes on the `persistence` section.

It is recommended to start from a fresh install.


{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}
