#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  # -- image repository
  repository: ghcr.io/home-assistant/home-assistant
  # -- image tag
  # @default -- chart.appVersion
  tag: 2023.9.3
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: CET

# -- Configures service settings for the chart. Normally this does not need to be modified.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8123

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - home.cluster.diluz.io
    pathType: Prefix

# -- Enable devices to be discoverable
# hostNetwork: true

# -- When hostNetwork is true set dnsPolicy to ClusterFirstWithHostNet
# dnsPolicy: ClusterFirstWithHostNet

securityContext:
  # -- (bool) Privileged securityContext may be required if USB devics are accessed directly through the host machine
  privileged:  # true

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: nfs-client
  # -- Configure a hostPathMount to mount a USB device in the container.
  # @default -- See values.yaml
  usb:
    enabled: false
    type: hostPath
    hostPath: /path/to/device

# -- Enable and configure postgresql database subchart under this key.
#    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
# @default -- See values.yaml
postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 14.9.0
  postgresqlUsername: home-assistant
  postgresqlPassword: home-assistant-pass
  postgresqlDatabase: home-assistant
  persistence:
    primary:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client

metrics:
  # -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
  # @default -- See values.yaml
  enabled: false
  serviceMonitor:
    interval: 1m
    scrapeTimeout: 30s
    labels: {}
    ## See https://www.home-assistant.io/docs/authentication/ for where to find
    ## long lived access token creation under your account profile, which is
    ## needed to monitor Home Assistant
    # bearerTokenSecret:
    #   name: ""
    #   key: ""

  # -- Enable and configure Prometheus Rules for the chart under this key.
  # @default -- See values.yaml
  prometheusRule:
    enabled: false
    labels: {}
    # -- Configure additionial rules for the chart under this key.
    # @default -- See prometheusrules.yaml
    rules: []
      # - alert: HomeAssistantAbsent
      #   annotations:
      #     description: Home Assistant has disappeared from Prometheus service discovery.
      #     summary: Home Assistant is down.
      #   expr: |
      #     absent(up{job=~".*home-assistant.*"} == 1)
      #   for: 5m
      #   labels:
      #     severity: critical

addons:
  # -- Enable and configure codeserver for the chart.
  #    This allows for easy access to configuration.yaml
  # @default -- See values.yaml
  codeserver:
    enabled: false
    args:
      - --auth
      - none
      - --user-data-dir
      - /data/config/.vscode
    volumeMounts:
    - name: config
      mountPath: /data/config

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi